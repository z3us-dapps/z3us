import { style } from '@vanilla-extract/css'
import { createSprinkles, defineProperties } from '@vanilla-extract/sprinkles'

import { vars } from './theme.css'

export const resetBase = style({
	margin: 0,
	padding: 0,
	border: 0,
	minWidth: 0,
	background: 'none',
	outline: 'none',
	boxSizing: 'border-box',
	fontSize: '100%',
	font: 'inherit',
	verticalAlign: 'baseline',
})

export const darkMode = 'dark'

const mode = defineProperties({
	properties: {
		color: vars.color,
		background: vars.color,
		backgroundColor: vars.color,
		borderColor: vars.color,
		boxShadow: vars.color,
		opacity: [0, 0.25, 0.5, 0.75, 1],
		fill: { none: 'none', currentColor: 'currentColor', transparent: 'transparent', ...vars.color }, // SVG fill property
		stroke: { none: 'none', currentColor: 'currentColor', transparent: 'transparent', ...vars.color }, // SVG stroke property
		outlineColor: { none: 'none', currentColor: 'currentColor', transparent: 'transparent', ...vars.color },
		textShadow: ['none', '1px 1px 1px rgba(0,0,0,0.5)', '2px 2px 2px rgba(0,0,0,0.5)'],
		filter: ['none', 'grayscale(100%)', 'brightness(50%)', 'contrast(200%)', 'blur(5px)'],
		textFillColor: ['auto', 'currentColor', 'red', 'green', 'blue'],
		backdropFilter: ['none', 'blur(5px)', 'brightness(50%)', 'contrast(200%)'],
		placeContent: ['normal', 'start', 'end', 'center', 'space-between', 'space-around'],
		placeItems: ['normal', 'start', 'end', 'center', 'stretch'],
		placeSelf: ['auto', 'start', 'end', 'center', 'stretch'],
		transition: vars.transition,
		animation: vars.animation,
	},
	conditions: {
		lightMode: {},
		// darkMode: { '@media': '(prefers-color-scheme: dark)' },
		darkMode: { selector: `.${darkMode} &` },
		hover: { selector: '&:hover' },
		focus: { selector: '&:focus' },
		active: { selector: '&:active:not(:disabled)' },
		focusNotVisible: { selector: '&:focus:not(:visible)' },
		focusVisible: { selector: '&:focus-visible' },
	},
	defaultCondition: 'lightMode',
})

const unresponsive = defineProperties({
	properties: {
		flexShrink: [0, 1],
		flexGrow: [0, 1],
		zIndex: [-1, 0, 1, 2],
		borderWidth: vars.border.width,
		borderRadius: vars.border.radius,
		borderTopLeftRadius: vars.border.radius,
		borderTopRightRadius: vars.border.radius,
		borderBottomLeftRadius: vars.border.radius,
		borderBottomRightRadius: vars.border.radius,
		cursor: ['auto', 'pointer', 'default', 'none'],
		textDecoration: ['none', 'underline', 'overline', 'line-through'],
	},
})

const responsive = defineProperties({
	conditions: {
		mobile: {},
		tablet: { '@media': 'screen and (min-width: 768px)' },
		desktop: { '@media': 'screen and (min-width: 1024px)' },
	},
	defaultCondition: 'mobile',
	properties: {
		position: ['static', 'relative', 'absolute', 'fixed', 'sticky'],
		display: [
			'none',
			'block',
			'inline',
			'contents',
			'inline-block',
			'flex',
			'inline-flex',
			'grid',
			'inline-grid',
			'table-cell',
		],
		flex: ['none', 'auto', '1', 'initial', 'inherit'],
		flexDirection: ['row', 'row-reverse', 'column', 'column-reverse'],
		flexWrap: ['nowrap', 'wrap', 'wrap-reverse'],
		justifyContent: ['stretch', 'flex-start', 'center', 'flex-end', 'space-around', 'space-between'],
		alignItems: ['stretch', 'flex-start', 'flex-end', 'center', 'baseline', 'self-start'],
		alignContent: ['stretch', 'flex-start', 'flex-end', 'center', 'space-between', 'space-around'],
		top: vars.spacing,
		bottom: vars.spacing,
		left: vars.spacing,
		right: vars.spacing,
		gap: vars.spacing,
		borderTop: [0, 1],
		borderBottom: [0, 1],
		borderLeft: [0, 1],
		borderRight: [0, 1],
		borderTopStyle: ['solid', 'dashed'],
		borderBottomStyle: ['solid', 'dashed'],
		borderLeftStyle: ['solid', 'dashed'],
		borderRightStyle: ['solid', 'dashed'],
		padding: vars.spacing,
		paddingTop: vars.spacing,
		paddingBottom: vars.spacing,
		paddingLeft: vars.spacing,
		paddingRight: vars.spacing,
		margin: vars.spacing,
		marginTop: vars.spacing,
		marginBottom: vars.spacing,
		marginLeft: vars.spacing,
		marginRight: vars.spacing,
		pointerEvents: ['none', 'auto'],
		overflow: ['visible', 'hidden', 'clip', 'auto', 'scroll'],
		overflowX: ['visible', 'hidden', 'clip', 'auto', 'scroll'],
		overflowY: ['visible', 'hidden', 'clip', 'auto', 'scroll'],
		textAlign: ['left', 'center', 'right'],
		height: vars.spacing,
		minHeight: vars.spacing,
		maxHeight: vars.spacing,
		width: vars.width,
		minWidth: vars.width,
		maxWidth: vars.width,
		userSelect: ['auto', 'none', 'unset'],
		fontSize: ['12px', '14px', '16px', '18px', '20px', '22px', '24px'],
		lineHeight: ['1', '1.25', '1.5', '1.75', '2'],
		letterSpacing: ['normal', '0.5px', '1px', '1.5px', '2px'],
		gridTemplateColumns: ['1fr', 'repeat(2, 1fr)', 'repeat(3, 1fr)', 'repeat(auto-fill, minmax(100px, 1fr))'],
		gridTemplateRows: ['1fr', 'repeat(2, 1fr)', 'repeat(3, 1fr)', 'repeat(auto-fill, minmax(100px, 1fr))'],
		gridColumnGap: ['0', '5px', '10px', '15px'],
		gridRowGap: ['0', '5px', '10px', '15px'],
		gridGap: ['0', '5px', '10px', '15px'],
		gridAutoColumns: ['auto', 'minmax(100px, 1fr)', 'minmax(200px, 2fr)'],
		gridAutoRows: ['auto', 'minmax(100px, 1fr)', 'minmax(200px, 2fr)'],
		gridAutoFlow: ['row', 'column', 'row dense', 'column dense'],
		gridRow: ['auto', '1 / span 2', '2 / span 3'],
		gridColumn: ['auto', '1 / span 2', '2 / span 3'],
		gridArea: ['auto', 'header', 'footer', 'sidebar'],
		borderStyle: ['none', 'solid', 'dashed', 'dotted', 'double'],
		fontWeight: ['normal', 'bold', 'bolder', 'lighter', '400', '700'],
		fontStyle: ['normal', 'italic', 'oblique'],
		textTransform: ['none', 'uppercase', 'lowercase', 'capitalize'],
		transform: ['none', 'translateX(10px)', 'translateY(10px)', 'scale(1.2)', 'rotate(45deg)'],
		transformOrigin: [
			'center',
			'top left',
			'top center',
			'top right',
			'center left',
			'center right',
			'bottom left',
			'bottom center',
			'bottom right',
		],
	},
	shorthands: {
		inset: ['top', 'bottom', 'left', 'right'],
		border: ['borderTop', 'borderBottom', 'borderLeft', 'borderRight'],
		borderStyle: ['borderTopStyle', 'borderBottomStyle', 'borderLeftStyle', 'borderRightStyle'],
		padding: ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight'],
		p: ['paddingTop', 'paddingBottom', 'paddingLeft', 'paddingRight'],
		paddingX: ['paddingLeft', 'paddingRight'],
		px: ['paddingLeft', 'paddingRight'],
		paddingY: ['paddingTop', 'paddingBottom'],
		py: ['paddingTop', 'paddingBottom'],
		margin: ['marginTop', 'marginBottom', 'marginLeft', 'marginRight'],
		m: ['marginTop', 'marginBottom', 'marginLeft', 'marginRight'],
		marginX: ['marginLeft', 'marginRight'],
		mx: ['marginLeft', 'marginRight'],
		marginY: ['marginTop', 'marginBottom'],
		my: ['marginTop', 'marginBottom'],
	},
	responsiveArray: ['mobile', 'tablet', 'desktop'],
})

export const sprinkles = createSprinkles(responsive, unresponsive, mode)

export type Sprinkles = Parameters<typeof sprinkles>[0]
